////////////////The buffers//////////////////
#define N 5;

channel buffer1 N;
channel buffer2 N;
channel buffer3 N;


////////////////The messages//////////////////
var rawdata = 1;
var endofdata = 2;
var start = 3;
var ack = 4;
var data = 5;
var complete = 6;


////////////////The process of each participating microservice//////////////////
PM1() = buffer2!rawdata -> buffer2!rawdata -> buffer2!endofdata -> buffer3!start -> buffer1?4-> PM1(); 

PM2() = buffer2?1 -> buffer3!data -> P2();
P2() = buffer2?2 -> buffer3!complete -> PM2() [] buffer2?1 -> buffer3!data -> P2();

PM3() = buffer3?3 -> buffer3?5 ->P3();
P3() =  buffer3?5 -> P3() []  buffer3?6 -> buffer1!ack ->  PM3() ; 




////////////////The process of a asynchronous interaction behavior of a microservice system //////////////////
System() = PM1() ||| PM2() ||| PM3() ;


#define buf1 call(cempty,buffer1) == true;
#define buf2 call(cempty,buffer2) == true;
#define buf3 call(cempty,buffer3) == true;

#assert System()|= []("init" -> <> ("terminate" && buf1 && buf2 && buf3 ));
#assert System() deadlockfree;


